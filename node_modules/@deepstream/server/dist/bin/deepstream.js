#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const pgk = require("../package.json");
const commander_1 = require("commander");
const deepstream_start_1 = require("./deepstream-start");
const deepstream_info_1 = require("./deepstream-info");
const deepstream_hash_1 = require("./deepstream-hash");
const deepstream_service_1 = require("./deepstream-service");
const deepstream_daemon_1 = require("./deepstream-daemon");
const deepstream_nginx_1 = require("./deepstream-nginx");
/**
 * This is used by the binary build to replace the first argument (path to nodeJS file)
 * with the second (deepstream binary).
 *
 * Node args:
 *
 * [ '.../n/bin/node', '.../deepstream.io/bin/deepstream' ]
 *
 * Actual binary args:
 *
 * [ 'deepstream', 'bin/deepstream.js' ]
 *
 * Wanted binary args:
 *
 * [ 'deepstream', 'deepstream' ]
 */
if (process.argv[0].endsWith('deepstream')) {
    process.argv[1] = process.argv[0];
}
const program = new commander_1.Command('deepstream');
program
    .usage('[command]')
    .version(pgk.version.toString());
deepstream_start_1.start(program);
deepstream_info_1.info(program);
deepstream_hash_1.hash(program);
deepstream_service_1.service(program);
deepstream_daemon_1.daemon(program);
deepstream_nginx_1.nginx(program);
program.parse(process.argv);
if (program.rawArgs.length <= 2) {
    program.emit('command:start');
}
//# sourceMappingURL=deepstream.js.map