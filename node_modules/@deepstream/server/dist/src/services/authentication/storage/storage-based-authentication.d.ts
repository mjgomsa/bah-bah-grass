import { DeepstreamPlugin, DeepstreamAuthentication, DeepstreamServices, DeepstreamAuthenticationResult } from '@deepstream/types';
interface StorageAuthConfig {
    reportInvalidParameters: boolean;
    table: string;
    createUser: boolean;
    hash: string;
    iterations: number;
    keyLength: number;
}
export declare class StorageBasedAuthentication extends DeepstreamPlugin implements DeepstreamAuthentication {
    private settings;
    private services;
    description: string;
    private logger;
    private hashSettings;
    /**
    * Creates the class, reads and validates the users.json file
    */
    constructor(settings: StorageAuthConfig, services: DeepstreamServices);
    whenReady(): Promise<void>;
    /**
    * Main interface. Authenticates incoming connections
    */
    isValidUser(connectionData: any, authData: any): Promise<DeepstreamAuthenticationResult | null>;
}
export {};
