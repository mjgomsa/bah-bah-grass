import { DeepstreamPlugin, DeepstreamAuthenticationCombiner, DeepstreamAuthentication, UserAuthenticationCallback } from '@deepstream/types';
import { JSONObject } from '../../../constants';
/**
 * The open authentication handler allows every client to connect.
 * If the client specifies a username as part of its authentication
 * data, it will be used to identify the user internally
 */
export declare class CombineAuthentication extends DeepstreamPlugin implements DeepstreamAuthenticationCombiner {
    private auths;
    description: string;
    constructor(auths: DeepstreamAuthentication[]);
    whenReady(): Promise<void>;
    close(): Promise<void>;
    isValidUser(connectionData: JSONObject, authData: JSONObject, callback: UserAuthenticationCallback): Promise<void>;
    onClientDisconnect(userId: string): void;
}
