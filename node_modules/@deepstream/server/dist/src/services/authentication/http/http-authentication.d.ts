import { DeepstreamPlugin, DeepstreamServices, DeepstreamConfig, DeepstreamAuthentication, DeepstreamAuthenticationResult } from '@deepstream/types';
import { JSONObject } from '../../../constants';
interface HttpAuthenticationHandlerSettings {
    endpointUrl: string;
    permittedStatusCodes: number[];
    requestTimeout: number;
    promoteToHeader: string[];
    retryStatusCodes: number[];
    retryAttempts: number;
    retryInterval: number;
    reportInvalidParameters: boolean;
}
export declare class HttpAuthentication extends DeepstreamPlugin implements DeepstreamAuthentication {
    private settings;
    private services;
    description: string;
    private retryAttempts;
    private requestId;
    constructor(settings: HttpAuthenticationHandlerSettings, services: DeepstreamServices, config: DeepstreamConfig);
    isValidUser(connectionData: JSONObject, authData: JSONObject): Promise<DeepstreamAuthenticationResult | null>;
    private validate;
    private retry;
    private validateSettings;
}
export {};
