"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const monitoring_base_1 = require("../monitoring-base");
class LogMonitoring extends monitoring_base_1.MonitoringBase {
    constructor(pluginOptions, services) {
        super(services);
        this.pluginOptions = pluginOptions;
        this.description = `Log Monitoring every ${this.pluginOptions.logInterval / 1000}seconds`;
        this.pluginOptions.monitoringKey = pluginOptions.monitoringKey || 'DEEPSTREAM_MONITORING';
        this.pluginOptions.logInterval = pluginOptions.logInterval || 15000;
    }
    async whenReady() {
        let lastDate = Date.now();
        this.logInterval = setInterval(() => {
            const newDate = Date.now();
            this.services.logger.info('MONITORING', `Monitoring stats for ${lastDate} to ${newDate}`, {
                [this.pluginOptions.monitoringKey]: this.getAndResetMonitoringStats(),
                from: lastDate,
                to: newDate
            });
            lastDate = newDate;
        }, this.pluginOptions.logInterval);
    }
    async close() {
        clearInterval(this.logInterval);
    }
}
exports.default = LogMonitoring;
//# sourceMappingURL=monitoring-log.js.map