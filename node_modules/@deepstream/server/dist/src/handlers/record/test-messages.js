"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.notify = exports.writeAck = exports.listenMessage = exports.unlistenMessage = exports.listenRejectMessage = exports.listenAcceptMessage = exports.createAndUpdate = exports.recordDelete = exports.recordPatchWithAck = exports.recordPatch = exports.recordUpdateWithAck = exports.recordUpdate = exports.recordVersion = exports.recordData = exports.recordHeadResponseMessage = exports.recordHeadMessage = exports.recordSnapshotMessage = exports.unsubscribeMessage = exports.subscribeMessage = exports.subscribeCreateAndReadDeniedMessage = exports.subscribeCreateAndReadPermissionErrorMessage = exports.readResponseMessage = exports.subscribeCreateAndReadMessage = exports.anotherDeletionSuccessMsg = exports.anotherDeletionMsg = exports.deletionSuccessMsg = exports.deletionMsg = void 0;
const C = require("../../constants");
exports.deletionMsg = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.DELETE,
    name: 'someRecord'
};
exports.deletionSuccessMsg = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.DELETE_SUCCESS,
    name: 'someRecord'
};
exports.anotherDeletionMsg = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.DELETE,
    name: 'no-storage/1'
};
exports.anotherDeletionSuccessMsg = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.DELETE_SUCCESS,
    name: 'no-storage/1'
};
exports.subscribeCreateAndReadMessage = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.SUBSCRIBECREATEANDREAD,
    names: ['some-record']
};
exports.readResponseMessage = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.READ_RESPONSE,
    name: 'some-record',
    version: 0,
    parsedData: {}
};
exports.subscribeCreateAndReadPermissionErrorMessage = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.MESSAGE_PERMISSION_ERROR,
    originalAction: C.RECORD_ACTION.SUBSCRIBECREATEANDREAD,
    names: ['some-record']
};
exports.subscribeCreateAndReadDeniedMessage = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.MESSAGE_DENIED,
    originalAction: C.RECORD_ACTION.SUBSCRIBECREATEANDREAD,
    names: ['some-record']
};
exports.subscribeMessage = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.SUBSCRIBE,
    names: ['some-record']
};
exports.unsubscribeMessage = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.UNSUBSCRIBE,
    names: ['some-record']
};
exports.recordSnapshotMessage = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.READ,
    name: 'some-record'
};
exports.recordHeadMessage = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.HEAD,
    name: 'some-record'
};
exports.recordHeadResponseMessage = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.HEAD_RESPONSE,
    name: 'some-record'
};
exports.recordData = { name: 'Kowalski' };
exports.recordVersion = 5;
exports.recordUpdate = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.UPDATE,
    name: 'some-record',
    version: exports.recordVersion + 1,
    parsedData: exports.recordData,
    isWriteAck: false
};
exports.recordUpdateWithAck = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.UPDATE,
    name: 'some-record',
    version: -1,
    parsedData: exports.recordData,
    isWriteAck: true
};
exports.recordPatch = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.PATCH,
    name: 'some-record',
    version: exports.recordVersion + 1,
    path: 'lastname',
    parsedData: 'Egon',
    isWriteAck: false
};
exports.recordPatchWithAck = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.PATCH,
    name: 'some-record',
    version: 4,
    path: 'lastname',
    parsedData: 'Egon',
    isWriteAck: true
};
exports.recordDelete = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.DELETE,
    name: 'some-record'
};
exports.createAndUpdate = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.CREATEANDUPDATE,
    name: 'some-record',
    version: -1,
    parsedData: exports.recordData,
    isWriteAck: false
};
exports.listenAcceptMessage = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.LISTEN_ACCEPT,
    name: 'record/.*',
    subscription: 'record/A'
};
exports.listenRejectMessage = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.LISTEN_REJECT,
    name: 'record/.*',
    subscription: 'record/A'
};
exports.unlistenMessage = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.UNLISTEN,
    name: 'record/.*'
};
exports.listenMessage = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.LISTEN,
    name: 'record/.*'
};
exports.writeAck = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.WRITE_ACKNOWLEDGEMENT,
    name: 'some-record',
    data: [[-1], null]
};
exports.notify = {
    topic: C.TOPIC.RECORD,
    action: C.RECORD_ACTION.NOTIFY,
    names: ['record1', 'record2']
};
//# sourceMappingURL=test-messages.js.map