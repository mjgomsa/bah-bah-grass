/**
* Append the global library directory as the prefix to any path
* used here
*/
export declare const lookupLibRequirePath: (filePath: string) => string;
/**
* Append the global configuration directory as the prefix to any path
* used here
*/
export declare const lookupConfRequirePath: (filePath: string) => string;
/**
 * Resolve a path which will be passed to *require*.
 *
 * If a prefix is not set the filePath will be returned
 * Otherwise it will either replace return a new path prepended with the prefix.
 * If the prefix is not an absolute path it will also prepend the CWD.
 *
 * file        || relative (starts with .) | absolute | else (npm module path)
 * -----------------------------------------------------------------------------
 * *prefix     || *CWD + prefix + file     | file     | *CWD + prefix + file
 * *no prefix  ||  CWD + file              | file     | file (resolved by nodes require)
 *
 * *CWD = ignore CWD if prefix is absolute
 */
export declare const lookupRequirePath: (filePath: string, prefix?: string | undefined) => string;
/**
 * Returns true if a file exists for a given path
 */
export declare const fileExistsSync: (filePath: string) => boolean;
