import { DeepstreamConfig, LOG_LEVEL } from '@deepstream/types';
import Deepstream from '../deepstream.io';
export declare type InitialLogs = Array<{
    level: LOG_LEVEL;
    message: string;
    event: any;
    meta: any;
}>;
/**
 * Reads and parse a general configuration file content.
 */
export declare const readAndParseFile: (filePath: string, callback: Function) => void;
/**
 * Loads a config file without having to initialize it. Useful for one
 * off operations such as generating a hash via cli
 */
export declare const loadConfigWithoutInitialization: (filePath?: string | null, initialLogs?: InitialLogs, args?: object | undefined) => Promise<{
    config: DeepstreamConfig;
    configPath: string;
}>;
/**
 * Loads a file as deepstream config. CLI args have highest priority after the
 * configuration file. If some properties are not set they will be defaulted
 * to default values defined in the defaultOptions.js file.
 * Configuraiton file will be transformed to a deepstream object by evaluating
 * some properties like the plugins (logger and connectors).
 */
export declare const loadConfig: (deepstream: Deepstream, filePath: string | null, args?: object | undefined) => Promise<{
    config: DeepstreamConfig;
    services: import("@deepstream/types").DeepstreamServices;
    file: string;
}>;
