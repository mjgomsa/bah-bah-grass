"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("@deepstream/types");
const v8_1 = require("v8");
const fs_1 = require("fs");
/**
 * This plugin will log the handshake data on login/logout and send a custom event to the logged-in
 * client.
 */
class HeapSnapshot extends types_1.DeepstreamPlugin {
    constructor(options, services) {
        super();
        this.options = options;
        this.services = services;
        this.description = 'V8 Memory Analysis';
        this.logger = this.services.logger.getNameSpace('MEMORY_ANALYSIS');
    }
    init() {
        if (typeof this.options.interval !== 'number') {
            this.logger.fatal(types_1.EVENT.ERROR, 'Invalid or missing "interval"');
        }
        if (this.options.interval < 10000) {
            this.logger.fatal(types_1.EVENT.ERROR, 'interval must be above 10000');
        }
        if (typeof this.options.outputDir !== 'string') {
            this.logger.fatal(types_1.EVENT.ERROR, 'Invalid or missing "outputDir"');
        }
        if (fs_1.existsSync(this.options.outputDir) === false) {
            fs_1.mkdirSync(this.options.outputDir, 0o744);
        }
    }
    async whenReady() {
        this.snapshotInterval = setInterval(() => this.outputHeapSnapshot(), this.options.interval);
    }
    async close() {
        clearInterval(this.snapshotInterval);
    }
    outputHeapSnapshot() {
        v8_1.writeHeapSnapshot(`${this.options.outputDir}/${Date.now()}-${process.pid}.heapsnapshot`);
        this.logger.info(types_1.EVENT.INFO, 'Taking a heap snapshot. This might affect your CPU usage drastically.');
    }
}
exports.default = HeapSnapshot;
//# sourceMappingURL=heap-snapshot.js.map