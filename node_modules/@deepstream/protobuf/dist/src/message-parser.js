"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const protobuf_map_1 = require("./protobuf-map");
// @ts-ignore
const protobuf_1 = require("../generated/protobuf");
const all_1 = require("../types/all");
function parse(data) {
    try {
        const msg = protobuf_1.Message.decodeDelimited(data);
        const message = protobuf_map_1.TopicMessage[msg.topic].decode(msg.message, msg.message.length);
        return [Object.assign({ topic: msg.topic }, message)];
    }
    catch (e) {
        return [{ topic: all_1.TOPIC.PARSER, action: all_1.PARSER_ACTION.ERROR }];
    }
}
exports.parse = parse;
function parseData(message) {
    if (message.requestorData) {
        message.requestorData = JSON.parse(message.requestorData);
    }
    if (message.parsedData !== undefined || message.data === undefined) {
        return true;
    }
    message.parsedData = JSON.parse(message.data);
    if (message.parsedData === undefined) {
        return new Error(`unable to parse data ${message.data}`);
    }
    return true;
}
exports.parseData = parseData;
//# sourceMappingURL=message-parser.js.map